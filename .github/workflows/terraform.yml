name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

permissions:
  contents: read



jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run: 
        shell: bash
        

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      

    # Check Current Directory
    - name: Check current folder
      run:  |
        echo "i am in defaults local folder"
        ls -al 
        cd terraform
        echo "I am in a new folder named terraform" 
        ls -al
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        cd terraform      
        terraform init
    # `cd terraform` was add to fix directory where terraform is been run from


    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: |
        cd terraform
        terraform fmt -check
    # `cd terraform` was add to fix directory where terraform is been run from

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      env:
        projectid: ${{ secrets.TF_PROJECTID }}
      run: |
        cd terraform
        terraform plan -input=false
    # `cd terraform` was add to fix directory where terraform is been run from

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd terraform
        terraform apply -auto-approve -input=false
    # `cd terraform` was add to fix directory where terraform is been run from
    # https://stackoverflow.com/questions/58139175/running-actions-in-another-directory/63122434#63122434
